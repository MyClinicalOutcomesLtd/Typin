@page "/example/{ExampleKey}"

@if (Descriptor is null)
{
    <section>
        <div class="row">
            <div class="col-8">
                <p class="text-error"><b>Error:</b> not found any example for key '@(ExampleKey)'.</p>
            </div>
            <div class="col is-vertical-align is-right">
                <NavLinkExtended href="" ActiveClass="active" Match="NavLinkExtendedMatch.Path" class="button primary outline">Go back</NavLinkExtended>
            </div>
        </div>
    </section>
}
else
{
    <section>
        <div class="row">
            <div class="col-8">
                <h1>@(Descriptor?.Name ?? string.Empty)</h1>
            </div>
            <div class="col is-vertical-align is-right">
                <NavLinkExtended href="" ActiveClass="active" Match="NavLinkExtendedMatch.Path" class="button primary outline">Go back</NavLinkExtended>
            </div>
        </div>

        <div class="row">
            <div class="col">
                @Markdown.ToHtml(Descriptor?.Description ?? string.Empty)
            </div>
        </div>
    </section>

    <section>
        <div class="row">
            <div class="col">
                <TabContainer>
                    <Tab Text="Quick start">
                        @Markdown.ToHtml(Descriptor?.QuickStartText ?? string.Empty)
                    </Tab>
                    <Tab Text="Files">
                        <section id="features">
                            <div class="card">
                                <ul>
                                    <li>📁&nbsp; File</li>
                                    <li>📁&nbsp; File</li>
                                    <li>📁&nbsp; File</li>
                                    <li>📁&nbsp; File</li>
                                </ul>
                            </div>
                        </section>
                    </Tab>
                    <Tab Text="Logs">
                        <LogViewer @ref="LogViewerInstance" />
                    </Tab>
                </TabContainer>
            </div>
        </div>
    </section>

    <section>
        <div class="row">
            <div class="col">
                <TabContainer>
                    <Tab Text="Terminal">
                        <TabContent>
                            <div class="pull-right">
                                <button type="button" title="Scroll to bottom" class="button accent outline is-medium" @onclick="ScrollToBottomAsync">
                                    ⇩
                                </button>
                                <button type="button" class="button accent outline is-medium" @onclick="ClearTerminalAsync">
                                    Clear
                                </button>
                                <button type="button" class="button error outline is-medium" @onclick="TerminateTerminalAsync">
                                    Restart
                                </button>
                            </div>
                        </TabContent>
                        <ChildContent>
                            <XTermComponent ExampleKey="@(Descriptor?.Key)" LoggerDestination="@LogViewerInstance" @ref="XTermInstance" />
                        </ChildContent>
                    </Tab>
                </TabContainer>
            </div>
        </div>
    </section>
}

@code
{
    public LogViewer? LogViewerInstance { get; set; }
    public XTermComponent? XTermInstance { get; set; }

    [Parameter]
    public ExampleDescriptor? Descriptor { get; set; }

    [Parameter]
    public string? ExampleKey { get; init; }

    [Inject] private IMarkdownService Markdown { get; init; } = default!;

    [Inject] private IOptions<ExamplesSettings> ExamplesSettings { get; init; } = default!;

    [Inject] private ITerminalRepository TerminalRepository { get; init; } = default!;

    protected override void OnInitialized()
    {
        Descriptor ??= GetDescriptor();
    }

    private ExampleDescriptor? GetDescriptor()
    {
        string key = ExampleKey ?? string.Empty;

        ExampleDescriptor? descriptor = ExamplesSettings.Value.Examples.Where(x => x.Key == key)
                                                                       .FirstOrDefault();

        return descriptor;
    }

    async Task TerminateTerminalAsync()
    {
        if (XTermInstance is not null)
            await XTermInstance.TerminateTerminal();
    }

    async Task ClearTerminalAsync()
    {
        if (XTermInstance is XTermComponent xc && TerminalRepository.GetOrDefault(xc.Id) is IWebTerminal terminal)
        {
            await terminal.ClearAsync();
        }
    }

    async Task ScrollToBottomAsync()
    {
        if (XTermInstance is XTermComponent xc && TerminalRepository.GetOrDefault(xc.Id) is IWebTerminal terminal)
        {
            await terminal.ScrollToBottomAsync();
        }
    }
}